--CREATING STAGING TABLES


--SALES TABLE

CREATE TABLE STAGING.CDW_SAPP_SALES(
    SALES_KEY INTEGER,
	DAY NVARCHAR(10) NOT NULL,
	MONTH NVARCHAR(20) NOT NULL,
	YEAR  NVARCHAR(10) NOT NULL,
	CUSTOMER_KEY INTEGER NOT NULL,
	SUPPLIER_KEY INTEGER NOT NULL,
	BRANCH_CODE BIGINT NOT NULL,
	BRANCH_NAME NVARCHAR(40),
	PRODUCT_CODE BIGINT NOT NULL,
	PRODUCT_NAME NVARCHAR(40),
	SALES_SOLD_QTY INTEGER,
	SALES_TOTAL_AMOUNT INTEGER,
	CREATED_DATE DATETIME DEFAULT(GETDATE()),
	CREATED_BY NVARCHAR(40) DEFAULT('CDW_SAPP_SALES'));
	
CREATE PROCEDURE STAGING_SALES_MERGE AS
BEGIN
	MERGE STAGING.CDW_SAPP_SALES AS TARGET
	USING(
			Select Distinct L.*, B.BRANCH_CODE, P.Product_Code, P.Product_Price
			FROM LANDING.CDW_SAPP_SALES L
			Inner JOIN STAGING.CDW_SAPP_BRANCH B
			ON L.BRANCH_NAME = B.BRANCH_NAME
			Inner JOIN STAGING.CDW_SAPP_PRODUCT P
			ON P.Product_Name = L.PRODUCT_NAME
		) AS SOURCE
	ON TARGET.SALES_KEY=SOURCE.COMPOSITE_ID 
	WHEN MATCHED AND (
			TARGET.DAY !=SOURCE.DAY OR
			TARGET.MONTH !=SOURCE.MONTH OR
			TARGET.YEAR !=SOURCE.YEAR OR
			TARGET.CUSTOMER_KEY !=SOURCE.CUSTOMER_SSN OR
			TARGET.SUPPLIER_KEY !=SOURCE.SUPPLIER_SSN OR
			TARGET.PRODUCT_NAME !=SOURCE.PRODUCT_NAME OR
			TARGET.SALES_SOLD_QTY !=SOURCE.QUANTITY_SOLD OR
			TARGET.SALES_TOTAL_AMOUNT != SOURCE.QUANTITY_SOLD * SOURCE.PRODUCT_PRICE
			)
	THEN 
			UPDATE SET 
			TARGET.DAY = SOURCE.DAY,
			TARGET.MONTH =SOURCE.MONTH,
			TARGET.YEAR =SOURCE.YEAR,
			TARGET.CUSTOMER_KEY = SOURCE.CUSTOMER_SSN,
			TARGET.SUPPLIER_KEY = SOURCE.SUPPLIER_SSN,
			TARGET.BRANCH_CODE = SOURCE.BRANCH_CODE,
			TARGET.PRODUCT_NAME = SOURCE.PRODUCT_NAME,
			TARGET.PRODUCT_CODE = SOURCE.PRODUCT_CODE,
			TARGET.SALES_SOLD_QTY = SOURCE.QUANTITY_SOLD,
			TARGET.SALES_TOTAL_AMOUNT = SOURCE.QUANTITY_SOLD * SOURCE.PRODUCT_PRICE,
			TARGET.CREATED_DATE = GETDATE(),
			TARGET.CREATED_BY = 'LANDING.CDW_SAPP_SALES'
	WHEN NOT MATCHED BY TARGET THEN  INSERT(SALES_KEY, DAY, MONTH , YEAR, CUSTOMER_KEY, SUPPLIER_KEY, BRANCH_NAME,
											PRODUCT_NAME, SALES_SOLD_QTY, SALES_TOTAL_AMOUNT , CREATED_DATE, CREATED_BY, BRANCH_CODE, PRODUCT_CODE) 
	VALUES (SOURCE.COMPOSITE_ID,SOURCE.DAY,SOURCE.MONTH,SOURCE.YEAR, SOURCE.CUSTOMER_SSN,SOURCE.SUPPLIER_SSN,
			SOURCE.BRANCH_NAME,SOURCE.PRODUCT_NAME,SOURCE.QUANTITY_SOLD, SOURCE.QUANTITY_SOLD * SOURCE.PRODUCT_PRICE, GETDATE(),'LANDING.CDW_SAPP_SALES',
			source.branch_code, source.product_code)

	WHEN NOT MATCHED BY SOURCE
	THEN DELETE;
END






--SUPPLIER TABLE

CREATE TABLE STAGING.CDW_SAPP_SUPPLIER( 
	SUPPLIER_NAME	VARCHAR(50),
	SUPPLIER_SSN	INTEGER,
	SUPPLIER_PHONE	VARCHAR(12),
	SUPPLIER_LOC	VARCHAR(30),
	LOAD_DATE DATETIME DEFAULT(GETDATE()),
	SOURCE VARCHAR(50) DEFAULT('CDW_SAPP_SUPPLIER'));
	


CREATE PROCEDURE STAGING_CDW_SAPP_SUPPLIER
AS
BEGIN
	MERGE STAGING.CDW_SAPP_SUPPLIER AS TARGET
	USING LANDING.CDW_SAPP_SUPPLIER AS SOURCE
	ON TARGET.SUPPLIER_SSN = SOURCE.SUPPLIER_SSN
	
	WHEN MATCHED AND 
		(TARGET.SUPPLIER_NAME != SOURCE.SUPPLIER_NAME OR
		TARGET.SUPPLIER_PHONE != SOURCE.SUPPLIER_PHONE  OR
		TARGET.SUPPLIER_LOC != SOURCE.SUPPLIER_LOC)
	THEN UPDATE SET
		TARGET.SUPPLIER_NAME  = SOURCE.SUPPLIER_NAME  ,
		TARGET.SUPPLIER_PHONE = SOURCE.SUPPLIER_PHONE ,
		TARGET.SUPPLIER_LOC = SOURCE.SUPPLIER_LOC,
		TARGET.LOAD_DATE= GETDATE(),
		TARGET.SOURCE='LANDING.CDW_SAPP_SUPPLIER'

	WHEN NOT MATCHED THEN 
	INSERT VALUES(SOURCE.SUPPLIER_NAME ,SOURCE.SUPPLIER_SSN ,SOURCE.SUPPLIER_PHONE ,SOURCE.SUPPLIER_LOC,GETDATE(),'LANDING.CDW_SAPP_SUPPLIER')

	WHEN NOT MATCHED BY SOURCE
	THEN DELETE;
END





--CUSTOMER TABLE

CREATE TABLE STAGING.CDW_SAPP_CUSTOMER(
	FIRST_NAME VARCHAR(40),
	MIDDLE_NAME VARCHAR(40), 
	LAST_NAME VARCHAR(40), 
	SSN VARCHAR(MAX), 
	APT_NO VARCHAR(7),
	STREET_NAME VARCHAR(30),
	CUST_CITY VARCHAR(30),
	CUST_STATE VARCHAR(30),
	CUST_COUNTRY VARCHAR(30),
	CUST_ZIP VARCHAR(7),
	CUST_PHONE VARCHAR(10),
	CUST_EMAIL VARCHAR(40),
	LOAD_DATE DATETIME DEFAULT(GETDATE()),
	SOURCE VARCHAR(50) DEFAULT('CDW_SAPP_CUSTOMER'));


CREATE PROCEDURE STAGING_CDW_SAPP_CUSTOMER
AS
BEGIN
	MERGE STAGING.CDW_SAPP_CUSTOMER AS TARGET
	USING LANDING.CDW_SAPP_CUSTOMER AS SOURCE
	ON TARGET.SSN=SOURCE.SSN 

 WHEN MATCHED AND
		(TARGET.FIRST_NAME !=SOURCE.FIRST_NAME OR
		 TARGET.MIDDLE_NAME !=SOURCE.MIDDLE_NAME OR
		 TARGET.LAST_NAME !=SOURCE.LAST_NAME OR
		 TARGET.APT_NO !=SOURCE.DOOR_NO OR
		 TARGET.STREET_NAME !=SOURCE.STREET_NAME OR
		 TARGET.CUST_CITY !=SOURCE.CUST_CITY OR
		 TARGET.CUST_STATE !=SOURCE.CUST_STATE OR
		 TARGET.CUST_COUNTRY !=SOURCE.CUST_COUNTRY OR
		 TARGET.CUST_ZIP !=SOURCE.CUST_ZIP  OR
		 TARGET.CUST_PHONE !=SOURCE.CUST_PHONE OR
		 TARGET.CUST_EMAIL !=SOURCE.CUST_EMAIL)

	THEN UPDATE SET

			TARGET.FIRST_NAME=SOURCE.FIRST_NAME, 
			TARGET.MIDDLE_NAME=SOURCE.MIDDLE_NAME,
			TARGET.LAST_NAME=SOURCE.LAST_NAME,
			TARGET.APT_NO=SOURCE.DOOR_NO,
			TARGET.STREET_NAME=SOURCE.STREET_NAME,
			TARGET.CUST_CITY=SOURCE.CUST_CITY,
			TARGET.CUST_STATE=SOURCE.CUST_STATE,
			TARGET.CUST_COUNTRY=SOURCE.CUST_COUNTRY,
			TARGET.CUST_ZIP=SOURCE.CUST_ZIP ,
			TARGET.CUST_PHONE=SOURCE.CUST_PHONE,
			TARGET.CUST_EMAIL=SOURCE.CUST_EMAIL,
			TARGET.LOAD_DATE=GETDATE(),
			TARGET.SOURCE='LANDING.CDW_SAPP_CUSTOMER'

	WHEN NOT MATCHED BY TARGET THEN  INSERT(FIRST_NAME,MIDDLE_NAME,LAST_NAME,APT_NO,
	SSN,STREET_NAME,CUST_CITY,CUST_STATE,
	CUST_COUNTRY,CUST_ZIP,CUST_PHONE,CUST_EMAIL,LOAD_DATE,SOURCE) 
	VALUES (SOURCE.FIRST_NAME,SOURCE.MIDDLE_NAME,SOURCE.LAST_NAME,SOURCE.DOOR_NO,SOURCE.SSN,SOURCE.STREET_NAME,
			SOURCE.CUST_CITY,SOURCE.CUST_STATE,SOURCE.CUST_COUNTRY,SOURCE.CUST_ZIP,SOURCE.CUST_PHONE,SOURCE.CUST_EMAIL,GETDATE(),'LANDING.CDW_SAPP_CUSTOMER')

	WHEN NOT MATCHED BY SOURCE
	THEN DELETE;
END





--PRODUCT TABLE

CREATE TABLE STAGING.CDW_SAPP_PRODUCT (
	PRODUCT_CODE BIGINT NULL,
	PRODUCT_NAME NVARCHAR(25) NULL,
	SUPPLIER_SSN BIGINT NULL,
	PRODUCT_PRICE FLOAT NULL,
	LOAD_DATE DATETIME DEFAULT(GETDATE()),
	SOURCE VARCHAR(50) DEFAULT('CDW_SAPP_PRODUCT'));


CREATE PROCEDURE STAGING_CDW_SAPP_PRODUCT
AS
BEGIN
	MERGE STAGING.CDW_SAPP_PRODUCT AS TARGET
	USING LANDING.CDW_SAPP_PRODUCT AS SOURCE
	ON TARGET.PRODUCT_CODE = SOURCE.PRODUCT_ID
	
	WHEN MATCHED AND 
		(TARGET.PRODUCT_NAME != SOURCE.PRODUCT_NAME OR
		TARGET.SUPPLIER_SSN != SOURCE.SUPPLIER_SSN  OR
		TARGET.PRODUCT_PRICE != SOURCE.PRODUCT_PRICE)
	THEN UPDATE SET
		TARGET.PRODUCT_NAME  = SOURCE.PRODUCT_NAME  ,
		TARGET.SUPPLIER_SSN = SOURCE.SUPPLIER_SSN ,
		TARGET.PRODUCT_PRICE = SOURCE.PRODUCT_PRICE,
		TARGET.LOAD_DATE= GETDATE(),
		TARGET.SOURCE='LANDING.CDW_SAPP_PRODUCT'

	WHEN NOT MATCHED THEN 
	INSERT VALUES(SOURCE.PRODUCT_ID ,SOURCE.PRODUCT_NAME ,SOURCE.SUPPLIER_SSN ,SOURCE.PRODUCT_PRICE,GETDATE(),'LANDING.CDW_SAPP_PRODUCT')

	WHEN NOT MATCHED BY SOURCE
	THEN DELETE;

END





--BRANCH TABLE

CREATE TABLE STAGING.CDW_SAPP_BRANCH (
	BRANCH_CODE	BIGINT NOT NULL,
	BRANCH_NAME	NVARCHAR(25),
	BRANCH_STREET	VARCHAR(30),
	BRANCH_CITY 	VARCHAR(30),
	BRANCH_STATE	NVARCHAR(30),
	BRANCH_ZIP	INTEGER,
	BRANCH_PHONE	NVARCHAR(13),
	LOAD_DATE DATETIME DEFAULT(GETDATE()),
	SOURCE VARCHAR(50) DEFAULT('CDW_SAPP_BRANCH'));


CREATE PROCEDURE STAGING_CDW_SAPP_BRANCH
AS
BEGIN
  MERGE STAGING.CDW_SAPP_BRANCH AS TARGET
  USING LANDING.CDW_SAPP_BRANCH AS SOURCE
  ON TARGET.BRANCH_CODE = CAST(SOURCE.BRANCH_CODE AS BIGINT)

    WHEN MATCHED AND 
		(TARGET.BRANCH_NAME!=SOURCE.BRANCH_NAME OR
		TARGET.BRANCH_STREET!=SOURCE.BRANCH_STREET OR
		TARGET.BRANCH_CITY!=SOURCE.BRANCH_CITY OR
		TARGET.BRANCH_STATE!=SOURCE.BRANCH_STATE OR
		TARGET.BRANCH_ZIP!=SOURCE.BRANCH_ZIP OR
		TARGET.BRANCH_PHONE!=SOURCE.BRANCH_PHONE)

  THEN UPDATE SET
    	TARGET.BRANCH_NAME = SOURCE.BRANCH_NAME,
    	TARGET.BRANCH_STREET=SOURCE.BRANCH_STREET,
    	TARGET.BRANCH_CITY = SOURCE.BRANCH_CITY,
    	TARGET.BRANCH_STATE = SOURCE.BRANCH_STATE,
    	TARGET.BRANCH_ZIP= SOURCE.BRANCH_ZIP,
    	TARGET.BRANCH_PHONE=SOURCE.BRANCH_PHONE,
		TARGET.LOAD_DATE=GETDATE(),
		TARGET.SOURCE='LANDING.CDW_SAPP_BRANCH'

  WHEN NOT MATCHED 
		THEN 
 			 INSERT VALUES(SOURCE.BRANCH_CODE,SOURCE.BRANCH_NAME,SOURCE.BRANCH_STREET, SOURCE.BRANCH_CITY,SOURCE.BRANCH_STATE,
  			 SOURCE.BRANCH_ZIP,SOURCE.BRANCH_PHONE,GETDATE(),'LANDING.CDW_SAPP_BRANCH')

	WHEN NOT MATCHED BY SOURCE
	THEN DELETE;

END


   


--TIME TABLE

CREATE TABLE STAGING.CDW_SAPP_TIME(
	TIMEID NVARCHAR(8),
	DAY INTEGER,
	MONTH INTEGER,
	QUARTER NVARCHAR(8),
	YEAR INTEGER,
	LOAD_DATE DATETIME DEFAULT(GETDATE()),
	SOURCE VARCHAR(50) DEFAULT('CDW_SAPP_CALENDAR'));

CREATE PROCEDURE STAGING_CDW_SAPP_TIME
AS
BEGIN
	MERGE STAGING.CDW_SAPP_TIME AS TARGET
	USING LANDING.CDW_SAPP_D_CALENDAR AS SOURCE
		ON TARGET.TIMEID = SOURCE.TIMEID
	WHEN MATCHED AND(TARGET.DAY <> SOURCE.DAY OR TARGET.MONTH <> SOURCE.MONTH
		OR TARGET.QUARTER <> SOURCE.QUARTER OR TARGET.YEAR <> SOURCE.YEAR)
	THEN UPDATE 
	SET 
		TARGET.DAY=SOURCE.DAY, TARGET.MONTH=SOURCE.MONTH,
		TARGET.QUARTER=SOURCE.QUARTER, TARGET.YEAR= SOURCE.YEAR

	WHEN NOT MATCHED 
		THEN INSERT VALUES (SOURCE.TIMEID, SOURCE.DAY, SOURCE.MONTH, SOURCE.QUARTER, SOURCE.YEAR, GetDate(), 'LANDING.CDW_SAPP_D_CALENDAR')

	WHEN NOT MATCHED BY SOURCE
	THEN DELETE;

END 



